// <auto-generated />
using System;
using Acquisition.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Acquisition.Infrastructure.Migrations
{
    [DbContext(typeof(AcquisitionContext))]
    partial class AcquisitionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Acquisition.Domain.Entities.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LoanOfferId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("Acquisition.Domain.Entities.LoanContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LoanContracts");
                });

            modelBuilder.Entity("Acquisition.Domain.Entities.LoanOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Maturity")
                        .HasColumnType("integer");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("LoanOffers");
                });

            modelBuilder.Entity("Acquisition.Domain.Entities.LoanApplication", b =>
                {
                    b.OwnsOne("Acquisition.Domain.ValueObjects.InitialLoanWish", "InitialLoanWish", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Maturity")
                                .HasColumnType("integer");

                            b1.Property<string>("Project")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.OwnsOne("Acquisition.Domain.ValueObjects.UserInformation", "UserInformation", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.Navigation("InitialLoanWish");

                    b.Navigation("UserInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
