// <auto-generated />
using System;
using Acquisition.Api.Infrastructure.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Acquisition.Infrastructure.Migrations
{
    [DbContext(typeof(AcquisitionContext))]
    partial class AcquisitionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Acquisition.Api.Domain.Entities.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LoanOfferId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("Acquisition.Api.Domain.Entities.LoanContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LoanContracts");
                });

            modelBuilder.Entity("Acquisition.Api.Domain.Entities.LoanOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Maturity")
                        .HasColumnType("integer");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("LoanOffers");
                });

            modelBuilder.Entity("Acquisition.Api.Infrastructure.Persistence.Database.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "maturity",
                            Value = "6"
                        },
                        new
                        {
                            Id = 2,
                            Type = "maturity",
                            Value = "12"
                        },
                        new
                        {
                            Id = 3,
                            Type = "maturity",
                            Value = "24"
                        },
                        new
                        {
                            Id = 4,
                            Type = "maturity",
                            Value = "36"
                        },
                        new
                        {
                            Id = 5,
                            Type = "maturity",
                            Value = "48"
                        },
                        new
                        {
                            Id = 6,
                            Type = "maturity",
                            Value = "72"
                        },
                        new
                        {
                            Id = 7,
                            Type = "maturity",
                            Value = "84"
                        },
                        new
                        {
                            Id = 8,
                            Type = "amount",
                            Value = "1000"
                        },
                        new
                        {
                            Id = 9,
                            Type = "amount",
                            Value = "1500"
                        },
                        new
                        {
                            Id = 10,
                            Type = "amount",
                            Value = "2000"
                        },
                        new
                        {
                            Id = 11,
                            Type = "amount",
                            Value = "2500"
                        },
                        new
                        {
                            Id = 12,
                            Type = "amount",
                            Value = "3000"
                        },
                        new
                        {
                            Id = 13,
                            Type = "amount",
                            Value = "3500"
                        },
                        new
                        {
                            Id = 14,
                            Type = "amount",
                            Value = "4000"
                        },
                        new
                        {
                            Id = 15,
                            Type = "amount",
                            Value = "4500"
                        },
                        new
                        {
                            Id = 16,
                            Type = "amount",
                            Value = "5000"
                        },
                        new
                        {
                            Id = 17,
                            Type = "amount",
                            Value = "5500"
                        },
                        new
                        {
                            Id = 18,
                            Type = "amount",
                            Value = "6000"
                        },
                        new
                        {
                            Id = 19,
                            Type = "amount",
                            Value = "6500"
                        },
                        new
                        {
                            Id = 20,
                            Type = "amount",
                            Value = "7000"
                        },
                        new
                        {
                            Id = 21,
                            Type = "amount",
                            Value = "7500"
                        },
                        new
                        {
                            Id = 22,
                            Type = "amount",
                            Value = "8000"
                        },
                        new
                        {
                            Id = 23,
                            Type = "amount",
                            Value = "8500"
                        },
                        new
                        {
                            Id = 24,
                            Type = "amount",
                            Value = "9000"
                        },
                        new
                        {
                            Id = 25,
                            Type = "amount",
                            Value = "9500"
                        },
                        new
                        {
                            Id = 26,
                            Type = "amount",
                            Value = "+10000"
                        },
                        new
                        {
                            Id = 27,
                            Type = "project",
                            Value = "Wedding"
                        },
                        new
                        {
                            Id = 28,
                            Type = "project",
                            Value = "Home Renovation"
                        },
                        new
                        {
                            Id = 29,
                            Type = "project",
                            Value = "Vacation"
                        },
                        new
                        {
                            Id = 30,
                            Type = "project",
                            Value = "Debt Consolidation"
                        },
                        new
                        {
                            Id = 31,
                            Type = "project",
                            Value = "Car Purchase"
                        });
                });

            modelBuilder.Entity("Acquisition.Api.Domain.Entities.LoanApplication", b =>
                {
                    b.OwnsOne("Acquisition.Api.Domain.ValueObjects.InitialLoanWish", "InitialLoanWish", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Maturity")
                                .HasColumnType("integer");

                            b1.Property<string>("Project")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.OwnsOne("Acquisition.Api.Domain.ValueObjects.UserInformation", "UserInformation", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("LoanApplicationId");

                            b1.ToTable("LoanApplications");

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationId");
                        });

                    b.Navigation("InitialLoanWish");

                    b.Navigation("UserInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
